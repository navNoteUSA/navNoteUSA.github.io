name: Security Audit

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sunday at midnight

jobs:
  security_audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check for sensitive files
        run: |
          # Define patterns for sensitive files
          SENSITIVE_PATTERNS=(
            "*.pem"
            "*.key"
            "*.p12"
            "*.pfx"
            "*id_rsa*"
            "*id_dsa*"
            "*_private.*"
            "*.keystore"
            "*.jks"
            "*aws_access_key_id*"
            "*aws_secret_access_key*"
            "*password*=*"
            "*secret*=*"
            "*credential*=*"
          )
          
          # Check for these patterns
          echo "Checking for sensitive files..."
          FOUND_SENSITIVE=false
          
          for pattern in "${SENSITIVE_PATTERNS[@]}"; do
            MATCHES=$(find . -type f -not -path "*/node_modules/*" -not -path "*/.git/*" -not -path "*/venv/*" -name "${pattern}" | wc -l)
            if [ "$MATCHES" -gt 0 ]; then
              echo "⚠️ Found sensitive files matching pattern: $pattern"
              find . -type f -not -path "*/node_modules/*" -not -path "*/.git/*" -not -path "*/venv/*" -name "${pattern}"
              FOUND_SENSITIVE=true
            fi
          done
          
          # Alert if any sensitive files were found
          if [ "$FOUND_SENSITIVE" = true ]; then
            echo "::warning::Sensitive files detected in the repository. Please remove them and use secure storage solutions."
          else
            echo "✅ No sensitive files detected."
          fi

      - name: Check for hardcoded secrets
        run: |
          echo "Checking for potential hardcoded secrets..."
          
          # Grep patterns that might indicate hardcoded secrets
          grep -r --include="*.{js,py,sh,yml,yaml,json,env}" \
            -E "(secret|password|token|key|credential)[\"']?\s*[:=]\s*[\"'][^\"']+[\"']" \
            --exclude-dir={node_modules,.git,venv,__pycache__,dist,build} . || true
          
          echo "Note: The grep results above are potential issues that need manual review." 